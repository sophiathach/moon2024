{"version":3,"sources":["images/door.svg","sounds/white_noise.mp3","sounds/Houston.mp3","images/colony1/earthfrommoon.jpeg","sounds/whole_story.mp3","images/spaceman1.png","images/spaceman2.png","sounds/Ready.mp3","images/colony1.png","images/colony2.png","images/colony1/tranquility.jpeg","images/colony1/tranquility2.jpeg","images/colony2/southpole1.jpeg","images/colony2/southpole2.jpeg","SpaceChoice.js","Colony1.js","Colony2.js","Home.js","carousel1.js","carousel2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SpaceChoice","props","ready","Audio","readyAudio","className","src","spaceMan","alt","value","onClick","handleClick","spaceMan2","e","firstColony","target","classList","contains","play","onended","history","push","Colony1","width","colony1","autoPlay","loop","whiteNoise","Colony2","colony2","Home","Carousel1","autoplay","infiniteLoop","transitionTime","image1","image4","image3","speech","Carousel2","App","houston","houstonAudio","exact","path","render","door","a","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.41183ede.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/door.6e81c9ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_noise.22c40db6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Houston.e0688e2e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/earthfrommoon.d77175d3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/whole_story.dabbd66a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/spaceman1.f317fc07.png\";","module.exports = __webpack_public_path__ + \"static/media/spaceman2.650d29da.png\";","module.exports = __webpack_public_path__ + \"static/media/Ready.d88d08e0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/colony1.aea72b77.png\";","module.exports = __webpack_public_path__ + \"static/media/colony2.be1b5ccd.png\";","module.exports = __webpack_public_path__ + \"static/media/tranquility.40d888e3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/tranquility2.c6a4c579.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/southpole1.147514a3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/southpole2.01a690fa.jpeg\";","import React from 'react';\nimport spaceMan from \"./images/spaceman1.png\";\nimport spaceMan2 from \"./images/spaceman2.png\"\nimport readyAudio from \"./sounds/Ready.mp3\";\n\n\ninterface SpaceChoiceProps {\n    history: History;\n}\n\nfunction SpaceChoice(props: SpaceChoiceProps){\n    // const [door, setDoor] = useState<boolean>();\n    const ready = new Audio(readyAudio);\n\n    return (\n        <>\n            <header className=\"App-header\">\n                <h2>Choose which colony we will explore!</h2>\n                <div className={'space'}>\n                <img src={spaceMan} className=\"door space0\" alt=\"space-0\" value=\"space-0\"\n                     onClick={handleClick}/>\n                <img src={spaceMan2} className=\"door space1\" alt=\"space-1\" value=\"space-1\"\n                     onClick={handleClick}/>\n                </div>\n            </header>\n        </>\n    );\n\n\n    function handleClick(e:Event){\n    const firstColony = e.target.classList.contains('space0');\n     ready.play();\n        ready.onended = function() {\n            firstColony ? props.history.push('/space/colony1') : props.history.push('/space/colony2');\n            }\n    }\n}\n\nexport default SpaceChoice;\n","import React, {useLayoutEffect} from 'react';\nimport colony1 from \"./images/colony1.png\";\nimport whiteNoise from \"./sounds/white_noise.mp3\"\n\ninterface Colony1Props {\n    history: History;\n}\nfunction Colony1 (props: Colony1Props) {\n\n        return (\n            <>\n                <header className=\"App-header\">\n                    <img width=\"100%\" src={colony1} onClick={handleClick}/>\n                    <audio autoPlay loop src={whiteNoise}/>\n                </header>\n            </>\n        );\n\n    function handleClick(){\n\n        props.history.push('/space/colony1/carousel1');\n    }\n\n}\nexport default Colony1;\n","import React from 'react';\nimport colony2 from \"./images/colony2.png\";\nimport whiteNoise from \"./sounds/white_noise.mp3\"\n\ninterface Colony2Props {\n    history: History;\n}\nfunction Colony2 (props: Colony2Props) {\n\n        return (\n            <>\n                <header className=\"App-header\">\n                    <img width=\"100%\" src={colony2}  onClick={handleClick}/>\n                    <audio autoPlay loop src={whiteNoise}/>\n                </header>\n            </>\n        );\n\n        function handleClick(){\n            props.history.push('/space/colony2/carousel2');\n        }\n\n}\nexport default Colony2;\n","import React from 'react';\nimport door from \"./images/door.svg\";\nimport houstonAudio from \"./sounds/Houston.mp3\";\n\n\ninterface HomeProps {\n    history: History;\n}\nfunction Home (props: HomeProps) {\n\n    const houston = new Audio(houstonAudio);\n        return (\n            <>\n                <header className=\"App-header\">\n                    <h1> Welcome to our next journey</h1>\n                    <h3> Choose where we should go</h3>\n                <div className=\"doorThing\">\n                    <div>\n                    <img src={door} className=\"door\" alt=\"door-0\"\n                         onClick={async () => handleClick()}/>\n                         <p>Stay on Earth</p>\n                    </div>\n                    <div>\n                    <img src={door} className=\"door\" alt=\"door-1\"\n                         onClick={async () => handleClick()}/>\n                    <p>To The Moon</p>\n                    </div>\n                    <div>\n                    <img src={door} className=\"door\" alt=\"door-2\"\n                         onClick={async () => handleClick()}/>\n                         <p>ISS</p>\n                    </div>\n                    </div>\n                </header>\n            </>\n        );\n\n    async function handleClick() {\n        houston.play();\n        houston.onended = function(){ props.history.push('/space')};\n\n    }\n    \n}\nexport default Home;\n","import React from 'react';\nimport image1 from './images/colony1/earthfrommoon.jpeg';\nimport image3 from './images/colony1/tranquility.jpeg';\nimport image4 from './images/colony1/tranquility2.jpeg';\nimport speech from \"./sounds/whole_story.mp3\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\ninterface Carousel1Props {\n    history: History;\n}\nfunction Carousel1 (props: Carousel1Props) {\n\n        return (\n            <>\n                    <Carousel autoplay={true} infiniteLoop={true} transitionTime={10}>\n                    <div>\n                        <img src={image1} />\n                        <p className=\"legend\">Legend 1</p>\n                    </div>\n                    <div>\n                        <img src={image4} />\n                        <p className=\"legend\">Legend 2</p>\n                    </div>\n                    <div>\n                        <img src={image3} />\n                        <p className=\"legend\">Legend 3</p>\n                    </div>\n                </Carousel>\n                    <audio autoPlay src={speech}/>\n            </>\n        );\n\n}\nexport default Carousel1;\n","import React from 'react';\nimport image1 from './images/colony1/earthfrommoon.jpeg';\nimport image3 from './images/colony2/southpole1.jpeg';\nimport image4 from './images/colony2/southpole2.jpeg';\nimport speech from \"./sounds/whole_story.mp3\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\ninterface Carousel2Props {\n    history: History;\n}\nfunction Carousel2 (props: Carousel1Props) {\n\n        return (\n            <>\n                    <Carousel autoplay={true} infiniteLoop={true} transitionTime={10}>\n                    <div>\n                        <img src={image1} />\n                        <p className=\"legend\">Legend 1</p>\n                    </div>\n                    <div>\n                        <img src={image3} />\n                        <p className=\"legend\">Legend 2</p>\n                    </div>\n                    <div>\n                        <img src={image4} />\n                        <p className=\"legend\">Legend 3</p>\n                    </div>\n                </Carousel>\n                    <audio autoPlay src={speech}/>\n            </>\n        );\n\n}\nexport default Carousel2;\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport SpaceChoice from './SpaceChoice.js';\nimport Colony1 from './Colony1';\nimport Colony2 from './Colony2.js';\nimport Home from './Home.js';\nimport Carousel1 from \"./carousel1\";\nimport Carousel2 from \"./carousel2\";\nimport houstonAudio from \"./sounds/Houston.mp3\";\nimport door from \"./images/door.svg\";\n\ninterface AppProps {\n    history: History;\n}\nfunction App (props: AppProps) {\n\n    const houston = new Audio(houstonAudio);\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        // render={({history})=> {return (<Home history={history}/>);}\n                    render={({history}) =>\n                    {\n                        return (\n                            <>\n                                <header className=\"App-header\">\n                                    <h1> Welcome to our next journey</h1>\n                                    <h3> Choose where we should go</h3>\n                                    <div className=\"doorThing\">\n                                        <div>\n                                            <img src={door} className=\"door\" alt=\"door-0\"\n                                                 onClick={async () => handleClick()}/>\n                                            <p>Stay on Earth</p>\n                                        </div>\n                                        <div>\n                                            <img src={door} className=\"door\" alt=\"door-1\"\n                                                 onClick={async () => handleClick()}/>\n                                            <p>To The Moon</p>\n                                        </div>\n                                        <div>\n                                            <img src={door} className=\"door\" alt=\"door-2\"\n                                                 onClick={async () => handleClick()}/>\n                                            <p>ISS</p>\n                                        </div>\n                                    </div>\n                                </header>\n                            </>\n                        );\n                    }\n                        }\n                    />\n                    <Route\n                        exact\n                        path=\"/space\"\n                        render={({history})=> {return (<SpaceChoice history={history}/>);}\n                        }\n                    />\n                    <Route\n                        exact\n                        path=\"/space/colony1\"\n                        render={({history})=> {return (<Colony1 history={history}/>);}\n                        }\n                    />\n                    <Route\n                        exact\n                        path=\"/space/colony1/carousel1\"\n                        render={({history})=> {return (<Carousel1 history={history}/>);}\n                        }\n                    />\n                    <Route\n                        exact\n                        path=\"/space/colony2/carousel2\"\n                        render={({history})=> {return (<Carousel2 history={history}/>);}\n                        }\n                    />\n                    <Route\n                        exact\n                        path=\"/space/colony2\"\n                        render={({history})=> {return (<Colony2 history={history}/>);}\n                        }\n                    />\n\n                </Switch>\n                </BrowserRouter>\n                <p> 2019SpaceAppsChallenge.</p>\n            </div>\n        );\n\n    async function handleClick() {\n        houston.play();\n        houston.onended = function(){ props.history.push('/space')};\n\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}